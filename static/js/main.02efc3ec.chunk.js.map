{"version":3,"sources":["ApiQueries.js","pages/SportCalendar.js","pages/Main.js","components/Timer.js","pages/Workout.js","pages/Choose.js","App.js","serviceWorker.js","index.js"],"names":["API_URL","UserId","a","axios","post","SberId","Name","Age","Gender","Active","newUser","data","get","params","users","user_id","category","groups","GroupId","group_id","exircises","date","Completed","Date","newProgress","progress","ach","getAllGroupsExercises","getExircicesfromGroup","getUsersBySberId","getProgressByUser","createProgressAchieve","createUser","getProverkaUsersByUserId","getAchiviesFomUser","withRouter","userId","digit","useEffect","ApiQueries","dates_new","console","log","forEach","element","push","parse","setSelectedDates","getData","useState","selectedDates","modifiers","selected","some","selectedDate","isSameDay","locale","ru","setGroupId","ToChooseCateg","achieves","setName","setDescription","style","display","justifyContent","marginBottom","width","compact","content","right","marginTop","to","textDecoration","onClick","left","flexDirection","text","color","primary","dict","size","view","count_days_train","count_train","format","time","minutes","Math","floor","seconds","padTime","customStyles","backgroundColor","background","backgroundImage","gradient","top","bottom","marginRight","transform","borderRadius","padding","Timer","subtitle","setIter","timeCount","iter","workoutLength","setAchieves","history","workoutExercises","sayExircise","useHistory","React","modalIsOpen","setIsOpen","counter","setCounter","counterRest","setCounterRest","timer","setTimeout","c","clearTimeout","getUserAchieves","isOpen","onAfterOpen","ref","_subtitle","textAlign","String","length","options","year","month","day","timezone","groupId","setWorkoutExercises","description","name","workOutStarted","setWorkOutStartet","iterChanged","assistant","assistantType","workoutsEx","fetchCategoriesAndSetCategories","undefined","discription","discriptionJoy","off_title","title","current","sendData","action","action_id","parameters","toLocaleString","map","i","_id","accent","class","src","photo","lines","scaleOnInteraction","outlined","fullWidth","disabled","tabIndex","workouts","setWorkouts","SendDataToAssistant","workout","Row","short_discription","Col","type","scaleOnFocus","placeholder","AppStyled","styled","div","body1","TypoScale","createGlobalStyle","sberBox","ThemeBackgroundEva","darkEva","ThemeBackgroundSber","darkSber","ThemeBackgroundJoy","darkJoy","DocStyles","character","setCharacter","useRef","state","notes","setUserId","setIterChanged","setDigit","setAssistantType","Id","then","ChangePage","page","ChooseTrain","train_name","charAt","toUpperCase","slice","trim","startTraining","changeExir","dispatchAssistantAction","id","getState","state_","item_selector","items","index","number","getStateForAssistant","createAssistant","on","event","sub","TochooseCat","path","exact","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.02efc3ec.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst API_URL = \"https://lit-escarpment-35334.herokuapp.com/\";\r\nasync function createSberId(SberId) {\r\n  const { data: newSberId } = await axios.post(`${API_URL}SberId/`, {\r\n    SberId,\r\n  });\r\n  return newSberId;\r\n}\r\n\r\nasync function createUser(UserId) {\r\n  const { data: newUser } = await axios.post(`${API_URL}User/`, {\r\n    UserId: UserId,\r\n    SberId: 0,\r\n    Name: \"\",\r\n    Age: 0,\r\n    Gender: \"\",\r\n    Active: 0,\r\n  });\r\n  return newUser;\r\n}\r\n\r\nasync function getUsersBySberId(SberId) {\r\n  const users = await axios.get(`${API_URL}User/`, {\r\n    params: {\r\n      SberId: SberId,\r\n    },\r\n  });\r\n  return users;\r\n}\r\n\r\nasync function createCategoryExercises(CategoryName) {\r\n  const { data: newCategory } = await axios.post(`${API_URL}ExCateg/`, {\r\n    CategoryName,\r\n  });\r\n  return newCategory;\r\n}\r\n\r\nasync function getAllCategoriesExirc() {\r\n  const categories = await axios.get(`${API_URL}ExCateg/`);\r\n  return categories;\r\n}\r\nasync function getCategoryById(CategoryId) {\r\n  const category = await axios.get(`${API_URL}ExCateg/`, {\r\n    params: {\r\n      Id: CategoryId,\r\n    },\r\n  });\r\n  return category;\r\n}\r\nasync function getProverkaUsersByUserId(UserId) {\r\n  const category = await axios.get(`${API_URL}ProverkaUsersByUserId/`, {\r\n    params: {\r\n      user_id: UserId,\r\n    },\r\n  });\r\n  return category;\r\n}\r\nasync function getAllGroupsExercises() {\r\n  const groups = await axios.get(`${API_URL}AllGroupsExercises/`);\r\n  return groups;\r\n}\r\nasync function getExircicesfromGroup(GroupId) {\r\n  const exircises = await axios.get(`${API_URL}ExircicesfromGroup/`, {\r\n    params: {\r\n      group_id: GroupId,\r\n    },\r\n  });\r\n  return exircises;\r\n}\r\n\r\nasync function createProgressAchieve(UserId, date, Completed) {\r\n  const { data: newProgress } = axios.post(`${API_URL}ProgressAchieve/`, {\r\n    UserId: UserId,\r\n    Date: date,\r\n    Completed: true,\r\n  });\r\n  return newProgress;\r\n}\r\n\r\nasync function getProgressByUser(UserId) {\r\n  const progress = axios.get(`${API_URL}ProgressByUser/`, {\r\n    params: {\r\n      user_id: UserId,\r\n    },\r\n  });\r\n  return progress;\r\n}\r\n\r\nasync function getMotivationalPhrase() {\r\n  const Phrase = axios.get(`${API_URL}Phrase/`);\r\n  return Phrase;\r\n}\r\n\r\nasync function updateQuestion(id, payload) {\r\n  const { data: newQuestion } = await axios.put(`${API_URL}${id}`, payload);\r\n  return newQuestion;\r\n}\r\nasync function getAchiviesFomUser(UserId) {\r\n  const ach = axios.get(`${API_URL}AchiviesFomUser/`, {\r\n    params: {\r\n      user_id: UserId,\r\n    },\r\n  });\r\n  return ach;\r\n}\r\nexport default {\r\n  API_URL,\r\n  getAllGroupsExercises,\r\n  getExircicesfromGroup,\r\n  getUsersBySberId,\r\n  getProgressByUser,\r\n  createProgressAchieve,\r\n  createUser,\r\n  getProverkaUsersByUserId,\r\n  getAchiviesFomUser,\r\n};\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { withRouter, Link } from \"react-router-dom\";\r\nimport { Calendar } from \"react-nice-dates\";\r\nimport \"react-nice-dates/build/style.css\";\r\nimport { ru } from \"date-fns/locale\";\r\nimport { isSameDay } from \"date-fns\";\r\nimport { Button, Container, Spinner } from \"@sberdevices/ui\";\r\nimport ApiQueries from \"../ApiQueries\";\r\n\r\nimport \"./SportCalendar.css\";\r\nconst SportCalendar = ({ userId, digit }) => {  \r\n  useEffect(() => {\r\n\r\n    const getData = async userId =>{\r\n      const data = await ApiQueries.getProgressByUser(userId);\r\n      var dates_new = []\r\n      console.log(\"Data\", data)\r\n      data.data.forEach((element) => {\r\n        dates_new.push(Date.parse(element.date))\r\n      });\r\n      setSelectedDates(dates_new)\r\n    }\r\n     getData(userId)\r\n  },[]);\r\n    const [selectedDates, setSelectedDates] = useState([])\r\n    const modifiers = {\r\n      selected: date => selectedDates.some(selectedDate => isSameDay(selectedDate, date))\r\n    }\r\n    return (\r\n      <Calendar modifiers={modifiers} locale={ru} />\r\n    )\r\n};\r\n\r\nexport default withRouter(SportCalendar);\r\n","import { Button, Container } from \"@sberdevices/ui\";\r\nimport React, { useState } from \"react\";\r\nimport { withRouter, Link } from \"react-router-dom\";\r\nimport {\r\n  IconCalendar,\r\n  IconAccessibility,\r\n  IconDone,\r\n  IconApps,\r\n  IconCross,\r\n  IconEvent,\r\n  IconHeart,\r\n} from \"@sberdevices/plasma-icons\";\r\nimport { Headline3 } from \"@sberdevices/ui/components/Typography\";\r\n\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  TextBox,\r\n  TextBoxBiggerTitle,\r\n  TextBoxSubTitle,\r\n  Cell,\r\n  CellDisclosure,\r\n  CellIcon,\r\n  TextBoxTitle,\r\n  MarkedList,\r\n  Badge,\r\n  MarkedItem,\r\n  IconSettings,\r\n} from \"@sberdevices/ui\";\r\nimport { tertiary, primary, accent } from \"@sberdevices/plasma-tokens\";\r\nconst Main = ({ setGroupId, ToChooseCateg, achieves, setName, setDescription }) => {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"space-around\",\r\n        marginBottom: \"2rem\",\r\n      }}\r\n    >\r\n      <Card style={{ width: \"20rem\" }}>\r\n        <CardContent compact>\r\n          <Cell\r\n            content={<TextBoxBiggerTitle>Начни день с</TextBoxBiggerTitle>}\r\n            right={<span style={{ marginTop: 5 }}></span>}\r\n          />\r\n          <Link\r\n            to=\"/fastworkout\"\r\n            style={{\r\n              textDecoration: \"none\",\r\n            }}\r\n          >\r\n            <Cell\r\n              onClick={() => {\r\n                setGroupId(2);\r\n                setDescription(\"Облегченный вид утренней тренировки. Позволит размять тело без сильных нагрузок на организм.\");\r\n                setName(\"Быстрая тренировка\");\r\n              }}\r\n              left={\r\n                <CellIcon>\r\n                  <IconAccessibility />\r\n                </CellIcon>\r\n              }\r\n              content={\r\n                <TextBox>\r\n                  <TextBoxTitle>Быстрая тренировка</TextBoxTitle>\r\n                  <TextBoxSubTitle>10 мин</TextBoxSubTitle>\r\n                </TextBox>\r\n              }\r\n              right={<CellDisclosure />}\r\n            />\r\n          </Link>\r\n          <Link to=\"/choose\" style={{ textDecoration: \"none\" }}>\r\n            <Cell\r\n              left={\r\n                <CellIcon>\r\n                  <IconApps />\r\n                </CellIcon>\r\n              }\r\n              onClick={() => ToChooseCateg()}\r\n              content={\r\n                <TextBox>\r\n                  <TextBoxTitle>Меню тренировок</TextBoxTitle>\r\n                  <TextBoxSubTitle>На любой вкус</TextBoxSubTitle>\r\n                </TextBox>\r\n              }\r\n              right={<CellDisclosure />}\r\n            />\r\n          </Link>\r\n\r\n          <Link\r\n            to=\"/calendar\"\r\n            style={{\r\n              textDecoration: \"none\",\r\n            }}\r\n          >\r\n            <Cell\r\n              left={\r\n                <CellIcon>\r\n                  <IconCalendar />\r\n                </CellIcon>\r\n              }\r\n              content={\r\n                <TextBox>\r\n                  <TextBoxTitle>Календарь</TextBoxTitle>\r\n                  <TextBoxSubTitle>Ваш прогресс</TextBoxSubTitle>\r\n                </TextBox>\r\n              }\r\n              right={<CellDisclosure />}\r\n            />\r\n          </Link>\r\n        </CardContent>\r\n      </Card>\r\n      <div style={{ flexDirection: \"column\" }}>\r\n        <br /> <br />\r\n        <Headline3>Ваша статистика</Headline3>\r\n        <MarkedList>\r\n          {/* <div\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          > */}\r\n          <MarkedItem\r\n            text=\"дней с тренировками подряд\"\r\n            style={{ color: primary }}\r\n          >\r\n            {/* <IconEvent size=\"xs\" color={accent} /> */}\r\n            <Badge text={achieves.dict} size={\"l\"} view={\"secondary\"} />\r\n          </MarkedItem>\r\n          {/* </div> */}\r\n\r\n          <MarkedItem\r\n            text=\"всего дней с тренировками\"\r\n            style={{ color: primary }}\r\n          >\r\n            {/* <IconDone size=\"xs\" color={accent} /> */}\r\n            <Badge\r\n              text={achieves.count_days_train}\r\n              size={\"l\"}\r\n              view={\"secondary\"}\r\n            />\r\n          </MarkedItem>\r\n\r\n          <MarkedItem text=\"общее число тренировок\" style={{ color: primary }}>\r\n            {/* <IconHeart size=\"xs\" color={accent} /> */}\r\n            <Badge text={achieves.count_train} size={\"l\"} view={\"secondary\"} />\r\n          </MarkedItem>\r\n        </MarkedList>\r\n        <br />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(Main);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Modal from \"react-modal\";\r\nimport { text, background, gradient } from \"@sberdevices/plasma-tokens\";\r\nimport { Button } from \"@sberdevices/ui\";\r\nimport { IconHouse } from \"@sberdevices/plasma-icons\";\r\nimport \"./Modal.css\";\r\nimport ApiQueries from \"../ApiQueries\";\r\n\r\nimport { Headline2 } from \"@sberdevices/ui/components/Typography\";\r\nimport { BrowserRouter as Router, useHistory } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\nconst format = (time) => {\r\n  // Convert seconds into minutes and take the whole part\r\n  const minutes = Math.floor(time / 60);\r\n\r\n  // Get the seconds left after converting minutes\r\n  const seconds = time % 60;\r\n\r\n  //Return combined values as string in format mm:ss\r\n  return `${minutes}:${padTime(seconds)}`;\r\n};\r\nconst customStyles = {\r\n  content: {\r\n    color: `${text}`,\r\n    backgroundColor: `${background}`,\r\n    backgroundImage: `${gradient}`,\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    right: \"auto\",\r\n    bottom: \"auto\",\r\n    marginRight: \"-50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    borderRadius: \"1em\",\r\n    padding: \"1em\",\r\n  },\r\n};\r\n// const DocStyles = {`\r\n//     /* stylelint-disable-next-line selector-nested-pattern */\r\n//     html {\r\n\r\n//     }\r\n// `;\r\n// Make sure to bind modal to your appElement (http://reactcommunity.org/react-modal/accessibility/)\r\nexport const Timer = ({\r\n  setIter,\r\n  timeCount,\r\n  iter,\r\n  userId,\r\n  workoutLength,\r\n  setAchieves,\r\n  workoutExercises,\r\n  sayExircise\r\n}) => {\r\n  const history = useHistory();\r\n\r\n  var subtitle;\r\n  const [modalIsOpen, setIsOpen] = React.useState(false);\r\n  function openModal() {\r\n    setIsOpen(true);\r\n  }\r\n\r\n  function afterOpenModal() {\r\n    // references are now sync'd and can be accessed.\r\n    subtitle.style.color = \"\";\r\n    setCounterRest(30);\r\n  }\r\n\r\n  function closeModal() {\r\n    setIsOpen(false);\r\n  }\r\n  const [counter, setCounter] = React.useState(timeCount.timeCount);\r\n  const [counterRest, setCounterRest] = React.useState(30);\r\n  React.useEffect(() => {\r\n    console.log(\"Верхний юз\");\r\n\r\n    setCounter(timeCount.timeCount);\r\n  }, [timeCount]);\r\n  React.useEffect(() => {\r\n    console.log(timeCount);\r\n    // if(changed){\r\n\r\n    // }\r\n    // else{\r\n    //   setChanged()\r\n    // }\r\n    console.log(\"Timer useeffect\");\r\n\r\n    let timer;\r\n    if (counter > 0) {\r\n      timer = setTimeout(() => setCounter((c) => c - 1), 1000);\r\n    } else if (counter === 0) {\r\n      setIsOpen(true);\r\n\r\n    }\r\n    return () => {\r\n      if (timer) {\r\n        clearTimeout(timer);\r\n      }\r\n    };\r\n  }, [counter]);\r\n  React.useEffect(() => {\r\n    let timer;\r\n    if (counterRest > 0) {\r\n      timer = setTimeout(() => setCounterRest((c) => c - 1), 1000);\r\n    } else if (counter === 0) {\r\n      setIsOpen(false);\r\n      if (iter + 1 == workoutLength) {\r\n        const getUserAchieves = async () => {\r\n          await ApiQueries.createProgressAchieve(userId, new Date(), true);\r\n          var ach = await ApiQueries.getAchiviesFomUser(userId);\r\n          setAchieves(ach.data);\r\n        };\r\n        getUserAchieves();\r\n      }\r\n      setIter(iter + 1);\r\n      setCounter(timeCount);\r\n    }\r\n    return () => {\r\n      if (timer) {\r\n        clearTimeout(timer);\r\n      }\r\n    };\r\n  }, [counterRest]);\r\n  return (\r\n    <div>\r\n      {counter !== 0 && <Headline2>Время: {format(counter)}</Headline2>}\r\n      <div>\r\n        <Modal\r\n          isOpen={modalIsOpen}\r\n          onAfterOpen={afterOpenModal}\r\n          //onRequestClose={closeModal}\r\n          style={customStyles}\r\n        >\r\n          <h2\r\n            ref={(_subtitle) => (subtitle = _subtitle)}\r\n            style={{ textAlign: \"center\" }}\r\n          >\r\n            Отдых\r\n          </h2>\r\n          <div style={{ textAlign: \"center\" }}>\r\n            <Headline2>Следующее упражнение через</Headline2>\r\n            <br />\r\n            {counterRest !== 0 && <Headline2>{format(counterRest)}</Headline2>}\r\n          </div>\r\n\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"row\",\r\n              justifyContent: \"space-between\",\r\n            }}\r\n          >\r\n            <Button\r\n              onClick={() => {\r\n                setIsOpen(false);\r\n                setCounterRest(30);\r\n                history.push(\"/\");\r\n              }}\r\n            >\r\n              <IconHouse />\r\n            </Button>\r\n\r\n            <Button\r\n              onClick={() => {\r\n                setIsOpen(false);\r\n                setIter(iter + 1);\r\n                setCounter(timeCount);\r\n              }}\r\n            >\r\n              Продолжить\r\n            </Button>\r\n          </div>\r\n        </Modal>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst padTime = (time) => {\r\n  return String(time).length === 1 ? `0${time}` : `${time}`;\r\n};\r\n","import { Button, Container, TextField } from \"@sberdevices/ui\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { withRouter, Link } from \"react-router-dom\";\r\nimport ApiQueries from \"../ApiQueries\";\r\n\r\nimport { tertiary, primary, accent } from \"@sberdevices/plasma-tokens\";\r\nimport {\r\n  body1,\r\n  Display3,\r\n  Headline3,\r\n  Body1,\r\n  Body3,\r\n  Body2,\r\n} from \"@sberdevices/ui/components/Typography\";\r\nimport { Headline2 } from \"@sberdevices/ui/components/Typography\";\r\n\r\nimport { CountdownCircleTimer } from \"react-countdown-circle-timer\";\r\nimport { createBrowserHistory } from \"history\";\r\nimport { BrowserRouter as Router, useHistory } from \"react-router-dom\";\r\nimport { IconDone, IconLock } from \"@sberdevices/plasma-icons\";\r\nimport { IconHouse } from \"@sberdevices/plasma-icons\";\r\n\r\nimport {\r\n  MarkedList,\r\n  MarkedItem,\r\n  Card,\r\n  CardBody,\r\n  CardMedia,\r\n  CardContent,\r\n  TextBoxBigTitle,\r\n  TextBoxBiggerTitle,\r\n  TextBox,\r\n  TextBoxSubTitle,\r\n  CardParagraph1,\r\n  CardHeadline1,\r\n  Spinner,\r\n} from \"@sberdevices/ui\";\r\nimport \"./Workout.css\";\r\nimport { Timer } from \"../components/Timer\";\r\nconst renderTime = ({ remainingTime }) => {\r\n  if (remainingTime === 0) {\r\n    return <div className=\"timer\">Стоп</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"timer\">\r\n      {/* <div className=\"text\">Remaining</div> */}\r\n      <div className=\"value\">{remainingTime}</div>\r\n      {/* <div className=\"text\">seconds</div> */}\r\n    </div>\r\n  );\r\n};\r\nvar date = new Date();\r\nvar options = {\r\n  year: \"numeric\",\r\n  month: \"numeric\",\r\n  day: \"numeric\",\r\n  timezone: \"UTC\",\r\n};\r\n\r\nconst Workout = ({\r\n  groupId,\r\n  workoutExercises,\r\n  setWorkoutExercises,\r\n  description,\r\n  name,\r\n  userId,\r\n  workOutStarted,\r\n  setWorkOutStartet,\r\n  setAchieves,\r\n  iterChanged,\r\n  assistant,\r\n  iter,\r\n  setIter,\r\n  setGroupId,\r\n  assistantType\r\n}) => {\r\n  const history = useHistory();\r\n\r\n\r\n \r\n  useEffect(() => {\r\n    const fetchCategoriesAndSetCategories = async () => {\r\n      const workoutsEx = await ApiQueries.getExircicesfromGroup(groupId);\r\n      setWorkoutExercises(workoutsEx.data);\r\n    };\r\n\r\n    fetchCategoriesAndSetCategories();\r\n    console.log(\"Workout useeffect\");\r\n  }, []);\r\n  // useEffect(() => {\r\n  //   if (iterChanged == 1) {\r\n  //     setIter(iter + 1);\r\n  //   } else if (iterChanged == 0) {\r\n  //     setIter(iter - 1);\r\n  //   }\r\n    \r\n  // }, [iterChanged]);\r\n\r\n  useEffect(() =>{\r\n   if(workoutExercises[iter]!=undefined){\r\n    sayExircise(workoutExercises[iter].discription, workoutExercises[iter].discriptionJoy)\r\n   }\r\n  },[iter])\r\n  useEffect(() => { \r\n    if (iter + 1 == workoutExercises.length) {\r\n      const getUserAchieves = async () => {\r\n        await ApiQueries.createProgressAchieve(\r\n          userId,\r\n          new Date(),\r\n          true\r\n        );\r\n        var ach = await ApiQueries.getAchiviesFomUser(\r\n          userId\r\n        );\r\n        setAchieves(ach.data);\r\n      };\r\n      getUserAchieves();\r\n    }\r\n    if (iterChanged == 1) { \r\n        setIter(iter + 1); \r\n    } else if (iterChanged == 0) { \r\n      if(iter>0){\r\n        setIter(iter - 1);\r\n      } \r\n    } \r\n  }, [iterChanged]);\r\n\r\n  const sayExircise = (off_title, title) => {\r\n    assistant.current?.sendData({ action: { action_id: 'say', parameters: { \"off_description\":off_title,\"description\":title, \"number\":iter } } });\r\n  };\r\n  const [timeCount, tsetTimeCount] = useState();\r\n  return !workOutStarted ? (\r\n    <>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-around\",\r\n        }}\r\n      >\r\n        <div style={{ flexDirection: \"column\" }}>\r\n          <Headline2>{name}</Headline2>\r\n\r\n          {workoutExercises ? (\r\n            <MarkedList>\r\n              {workoutExercises.map(({ _id, name }, i) => (\r\n                <MarkedItem text={name} style={{ color: primary }}>\r\n                  <IconDone size=\"xs\" color={accent} />\r\n                </MarkedItem>\r\n              ))}\r\n            </MarkedList>\r\n          ) : (\r\n            <Spinner />\r\n          )}\r\n\r\n          <br />\r\n        </div>\r\n        <div style={{ flexDirection: \"column\" }}>\r\n          <Card style={{ width: \"20rem\" }}>\r\n            <CardBody>\r\n              <CardContent>\r\n                <TextBox>\r\n                  <TextBoxBigTitle>Описание</TextBoxBigTitle>\r\n                  {/* <TextBoxSubTitle>10 минут</TextBoxSubTitle> */}\r\n                  <CardParagraph1 style={{ marginTop: \"0.75rem\" }} lines={4}>\r\n                    {description}\r\n                  </CardParagraph1>\r\n                  <TextBoxSubTitle>Подходит для всех</TextBoxSubTitle>\r\n                </TextBox>\r\n                <br />\r\n                <Button\r\n                 \r\n                  onClick={() => {\r\n                    if(workoutExercises[0].discriptionJoy!=undefined && workoutExercises[0].discription!=undefined){\r\n                      sayExircise(workoutExercises[0].discription, workoutExercises[0].discriptionJoy)\r\n                    setWorkOutStartet(true);\r\n                    setIter(iter+1)\r\n                  }}}\r\n                >\r\n                  Начать\r\n                </Button>\r\n              </CardContent>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </>\r\n  ) : (\r\n    <div>\r\n      {/* <Button\r\n        onClick={() => {\r\n          setWorkOutStartet(false);\r\n        }}\r\n      >\r\n        Закончить\r\n      </Button>\r\n      <Button\r\n        onClick={() => {\r\n          history.push(\"/\");\r\n        }}\r\n      >\r\n        На главную\r\n      </Button> */}\r\n\r\n      <Card style={{ marginBottom: \"3rem\" }}>\r\n        <CardBody>\r\n          <CardContent>\r\n            {workoutExercises ? (\r\n              <div>\r\n                {iter == workoutExercises.length ? (\r\n                  <div\r\n                    style={{\r\n                      display: \"flex\",\r\n                      flexDirection: \"column\",\r\n                      justifyContent: \"space-around\",\r\n                    }}\r\n                  >\r\n                    <TextBoxBigTitle>Тренировка завершена</TextBoxBigTitle>\r\n\r\n                    <div\r\n                      style={{\r\n                        display: \"flex\",\r\n                        justifyContent: \"space-around\",\r\n                      }}\r\n                    >\r\n                      <div style={{ flexDirection: \"column\" }}>\r\n                        <CardParagraph1>\r\n                          {date.toLocaleString(\"ru\", options)}{\" \"}\r\n                        </CardParagraph1>\r\n                        {/* <TextBoxSubTitle>Время выполнения</TextBoxSubTitle> */}\r\n                      </div>\r\n\r\n                      {workoutExercises ? (\r\n                        <MarkedList>\r\n                          {workoutExercises.map(({ _id, name }, i) => (\r\n                            <MarkedItem text={name} style={{ color: primary }}>\r\n                              <IconDone size=\"xs\" color={accent} />\r\n                            </MarkedItem>\r\n                          ))}\r\n                        </MarkedList>\r\n                      ) : (\r\n                        <Spinner />\r\n                      )}\r\n                    </div>\r\n                    <br />\r\n                    <Button\r\n                      onClick={() => {\r\n                        setWorkOutStartet(false);\r\n                        setIter(-1);\r\n                        setGroupId(2);\r\n                        history.push(\"/\");\r\n                      }}\r\n                    >\r\n                      <IconHouse />\r\n                    </Button>\r\n                  </div>\r\n                ) : (\r\n                  <div>\r\n                    <div\r\n                      style={{\r\n                        display: \"flex\",\r\n                        flexDirection: \"row\",\r\n                        justifyContent: \"space-between\",\r\n                      }}\r\n                    >\r\n                      <TextBoxBigTitle>\r\n                        {workoutExercises[iter].name}\r\n                      </TextBoxBigTitle>\r\n                      <div style={{ marginTop: \"0.5rem\" }}>\r\n                        <Timer\r\n                          setIter={setIter}\r\n                          timeCount={{ timeCount: workoutExercises[iter].time }}\r\n                          iter={iter}\r\n                          userId={userId}\r\n                          workoutLength={workoutExercises.length}\r\n                          setAchieves={setAchieves}\r\n                          workoutExercises={workoutExercises}\r\n                          sayExircise={sayExircise}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div\r\n                      style={{\r\n                        display: \"flex\",\r\n                        justifyContent: \"space-around\",\r\n                        flexDirection: \"row\",\r\n                      }}\r\n                    >\r\n                      <div class=\"wrapper exmp2\">\r\n                        <img src={workoutExercises[iter].photo} />\r\n                      </div>\r\n                      {/* <img\r\n                          style={{\r\n                            width: \"auto\",\r\n                            heigh: \"auto\",\r\n                            maxWidth: \"500px\",\r\n                            borderRadius: \"25px\",\r\n                          }}\r\n                          src=\"https://chslovo.com/wp-content/uploads/2019/03/21-1.jpg\"\r\n                        /> */}\r\n\r\n                      <div style={{ flexDirection: \"column\" }}>\r\n                        <CardParagraph1 lines={5}>\r\n                         \r\n                         { assistantType == \"joy\" ?  workoutExercises[iter].discriptionJoy :  workoutExercises[iter].discription}\r\n                        </CardParagraph1>\r\n                        <div\r\n                          style={{\r\n                            display: \"flex\",\r\n                            justifyContent: \"space-between\",\r\n                          }}\r\n                        >\r\n                          <Button\r\n                            view=\"primary\"\r\n                            size=\"s\"\r\n                            scaleOnInteraction={false}\r\n                            outlined={false}\r\n                            fullWidth\r\n                            disabled={iter == 0}\r\n                            style={{ marginTop: \"1em\", marginRight: \"1em\" }}\r\n                            tabIndex={-1}\r\n                            onClick={() => {\r\n                              if(workoutExercises[iter-1]!=undefined){\r\n                                //assistant.current?.sendData({ action: { action_id: 'say', parameters: { \"description\":workoutExercises[iter-1].discription, \"number\":iter } } });\r\n                              }\r\n                              console.log(workoutExercises);\r\n                              setIter(iter - 1);\r\n                            }}\r\n                          >\r\n                            Предыдущее\r\n                          </Button>\r\n                          <Button\r\n                            view=\"primary\"\r\n                            size=\"s\"\r\n                            scaleOnInteraction={false}\r\n                            outlined={false}\r\n                            fullWidth\r\n                            style={{ marginTop: \"1em\" }}\r\n                            tabIndex={-1}\r\n                            onClick={() => {\r\n                              // if(workoutExercises[iter+1]!=undefined){\r\n                              //   sayExircise(workoutExercises[iter+1].discription)\r\n                              // }\r\n                              //if(workoutExercises[iter+1]!=undefined){\r\n                                //assistant.current?.sendData({ action: { action_id: 'say', parameters: { \"description\":workoutExercises[iter+1].discription, \"number\":iter } } });\r\n                             // }\r\n                             if (iter + 1 == workoutExercises.length) {\r\n                              const getUserAchieves = async () => {\r\n                                await ApiQueries.createProgressAchieve(\r\n                                  userId,\r\n                                  new Date(),\r\n                                  true\r\n                                );\r\n                                var ach = await ApiQueries.getAchiviesFomUser(\r\n                                  userId\r\n                                );\r\n                                setAchieves(ach.data);\r\n                              };\r\n                              getUserAchieves();\r\n                            }\r\n\r\n                              setIter(iter + 1);\r\n                            }}\r\n                          >\r\n                            Следующее\r\n                          </Button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            ) : (\r\n              <div>\r\n                <Spinner />\r\n              </div>\r\n            )}\r\n          </CardContent>\r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(Workout);\r\n","import { Button, Container } from \"@sberdevices/ui\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { withRouter, Link } from \"react-router-dom\";\r\nimport { Row } from \"@sberdevices/ui/components/Grid/Row\";\r\nimport { Col } from \"@sberdevices/ui/components/Grid/Col\";\r\nimport ApiQueries from \"../ApiQueries\";\r\nimport {\r\n  Spinner,\r\n  Card,\r\n  CardBody,\r\n  CardMedia,\r\n  CardContent,\r\n  TextBoxBigTitle,\r\n  TextBoxBiggerTitle,\r\n  TextBoxSubTitle,\r\n  TextBox,\r\n} from \"@sberdevices/ui\";\r\nimport { Headline2 } from \"@sberdevices/ui/components/Typography\";\r\nimport \"./Workout.css\";\r\n\r\nconst Choose = ({\r\n  setGroupId,\r\n  setDescription,\r\n  setName,\r\n  setWorkouts,\r\n  workouts,\r\n  SendDataToAssistant\r\n}) => {\r\n \r\n  useEffect(() => {\r\n    const fetchCategoriesAndSetCategories = async () => {\r\n      const workout = await ApiQueries.getAllGroupsExercises();\r\n      workouts.current =workout;\r\n    };\r\n    fetchCategoriesAndSetCategories();\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <div style={{ display: \"flex\", justifyContent: \"space-around\" }}>\r\n        <Headline2>Выберите режим тренировки</Headline2>\r\n      </div>\r\n      <br />\r\n      <Row>\r\n        {workouts.current.data ? (\r\n          workouts.current.data.map(({ name, short_discription, discription }, i) => (\r\n            <>\r\n              <Col type=\"calc\" size={1}>\r\n                <Card\r\n                  style={{ width: \"11rem\", marginBottom: \"1rem\" }}\r\n                  tabIndex={-1}\r\n                  scaleOnFocus={true}\r\n                >\r\n                  <CardBody>\r\n                    <CardMedia\r\n                      src=\"./images/320_320_0.jpg\"\r\n                      placeholder=\"./images/320_320_1.jpg\"\r\n                    />\r\n                    <CardContent>\r\n                      <TextBox>\r\n                        <TextBoxBigTitle>{name}</TextBoxBigTitle>\r\n                        <TextBoxSubTitle>{short_discription}</TextBoxSubTitle>\r\n                      </TextBox>\r\n\r\n                      <Link\r\n                        style={{\r\n                          color: \"#FFF\",\r\n                          textDecoration: \"none\",\r\n                        }}\r\n                        to=\"/fastworkout\"\r\n                      >\r\n                        <Button\r\n                          view=\"primary\"\r\n                          size=\"s\"\r\n                          scaleOnInteraction={false}\r\n                          outlined={false}\r\n                          fullWidth\r\n                          style={{ marginTop: \"1em\" }}\r\n                          tabIndex={-1}\r\n                          onClick={() => {\r\n                            console.log(workouts.data);\r\n                            //SendDataToAssistant('chooseCategory')\r\n                            setGroupId(i + 1);\r\n                            setDescription(discription);\r\n                            setName(name);\r\n                          }}\r\n                        >\r\n                          Выбрать\r\n                        </Button>\r\n                      </Link>\r\n                    </CardContent>\r\n                  </CardBody>\r\n                </Card>\r\n              </Col>\r\n            </>\r\n          ))\r\n        ) : (\r\n          <Spinner />\r\n        )}\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default withRouter(Choose);\r\n","import React, { useState, useEffect, useRef } from \"react\";\nimport \"./App.css\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { AssistantCharacterType } from \"@sberdevices/assistant-client\";\nimport { darkJoy, darkEva, darkSber } from \"@sberdevices/plasma-tokens/themes\";\nimport { text, background, gradient } from \"@sberdevices/plasma-tokens\";\nimport { Container } from \"@sberdevices/ui\";\n\nimport { createGlobalStyle } from \"styled-components\";\nimport styled from \"styled-components\";\nimport { sberBox } from \"@sberdevices/plasma-tokens/typo\";\nimport SportCalendar from \"./pages/SportCalendar\";\nimport { body1 } from \"@sberdevices/ui/components/Typography\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Main from \"./pages/Main\";\nimport Workout from \"./pages/Workout\";\nimport ApiQueries from \"./ApiQueries\";\nimport Choose from \"./pages/Choose\";\nimport { useHistory, withRouter } from \"react-router-dom\";\nimport {\n  createSmartappDebugger,\n  createAssistant,\n  AssistantAppState,\n} from \"@sberdevices/assistant-client\";\nimport { set } from \"date-fns\";\nimport { Spinner } from \"@sberdevices/ui\";\n\nconst AppStyled = styled.div`\n  padding: 30px;\n  ${body1}\n`;\nconst TypoScale = createGlobalStyle(sberBox);\n// const DocStyles = createGlobalStyle`\n//     /* stylelint-disable-next-line selector-nested-pattern */\n//     html {\n//         color: ${text};\n//         background-color: ${background};\n//         background-image: ${gradient};\n//         /** необходимо залить градиентом всю подложку */\n//         min-height: 100vh;\n//     }\n// `;\n// const Theme = createGlobalStyle(darkJoy);\n//const assistant=null;\nconst ThemeBackgroundEva = createGlobalStyle(darkEva);\nconst ThemeBackgroundSber = createGlobalStyle(darkSber);\nconst ThemeBackgroundJoy = createGlobalStyle(darkJoy);\n\nconst DocStyles = createGlobalStyle`\n  html {\n    color: ${text};\n    background-color: ${background};\n    background-image: ${gradient};\n    min-height: 100vh;\n  }\n`;\n\nconst initializeAssistant = (getState /*: any*/) => {\n  if (process.env.NODE_ENV === \"development\") {\n    return createSmartappDebugger({\n      token:\n        \"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE2MTU3OTUwMDQsImV4cCI6MTYxNTg4MTQwNCwidHlwZSI6IkJlYXJlciIsImp0aSI6ImU4Y2FiMmVlLWRmZDAtNDZlZS1hZWVkLWI5Zjc5ZTNjNzBiNCIsInN1YiI6IjdkMTM4N2FhY2RiYjY0ZTMwNTE3ODQ3ZGVhNzgwMDNmMTA4NjE1YmNlZGIzNTlmYjhmNWJiMWVkOGI0OTU3ZmM1MzliZTkyNzAwNDI2Mjk4IiwiYXVkIjoiVlBTIn0.PcW2HcnsxaoPw5ZE4KZWqk8ewIakqI_CxG6vnz7iSx9nO79TNSg_N9ABozncde7XxAPzGAUgMDhw2lrkKm2Lyz8PpTFsVyaDumiXKl5qNDSL_kIlbOuWIY0bknQFRj-r_dh92fcGkqm79CwZUTMLlagAKIgYIlAnmBjjWDjJ_eonlp8fqtrVeAyUHwiy-f9DT07Hc05HeddGwkIKonVW-K6YoAtEpjrYEA3_HRt9q8OsPdqkTFxvCr2q9yXUwEjIuVjsUE10tFGfCRApIuvSwxR6YaSKH2HcUFun_t4XyKtovCucdme0KxcNnP-6xWfLFL8w9CF_7p2SHhgCknQt89iH0yWRI6MMzSQBtCQ1lRRl4rRjXwbx2n3ILSTC6OF8QhxcSDT2F9mPYbWEJ3vHu20u5_f_sRF-tHE1NfmrbLlPLioW6mmcrL7oYgKIfFd3zBz-Sw9-AlSBr4kNuV_CKGURxQGcsLgQimkhFW29IqC_EKgbfZRzbGR_me-1XECA4sTTiU-qcfF88-bAWL976Tb19SLw7lgqmi30v1Ov3oXdKyhCjqprkbdDjtqlVg6qQMcX3EZkyZyvrm-cJ8CGRoTH0WnzNrl3p820Min9Y_5VT4zbIogi8QTl28-aw84cXZasLFJtD0j0cobMsHvGPMsSzS34FoPS20ITDMi2Lbw\" ??\n        \"\",\n      initPhrase: `Запусти Бодрое утро`,\n      getState,\n    });\n  }\n  return createAssistant({ getState });\n};\n\nfunction App() {\n  const [character, setCharacter] = useState(\"sber\");\n\n  var assistant = useRef();\n  var workouts = useRef();\n  var state = {\n    notes: [],\n  };\n  //const [workouts, setWorkouts] = useState([]);\n\n  const [workoutExercises, setWorkoutExercises] = useState([]);\n  const [iter, setIter] = useState(-1);\n  const [userId, setUserId] = useState([]);\n  const [workOutStarted, setWorkOutStartet] = useState(false);\n  const [iterChanged, setIterChanged] = useState(-1);\n  const [digit, setDigit] = useState(-1);\n  const [assistantType, setAssistantType] = useState(\"\");\n  const getStateForAssistant = () => {\n    console.log(\"getStateForAssistant: this.state:\", state);\n    const state_ = {\n      item_selector: {\n        items: state.notes.map(({ id, title }, index) => ({\n          number: index + 1,\n          id,\n          title,\n        })),\n      },\n    };\n    console.log(\"getStateForAssistant: state:\", state);\n    return state_;\n  };\n\n  const getData = async (Id) => {\n    await ApiQueries.getProverkaUsersByUserId(Id).then((data) =>\n      setDigit(data.data)\n    );\n  };\n\n  const ChangePage = async (page) => {\n    switch (page) {\n      case \"Calendar\":\n        history.push(\"/calendar\");\n        break;\n      case \"fastworkout\":\n        history.push(\"/calendar\");\n        break;\n      case \"choose_training\":\n        history.push(\"/choose\");\n        break;\n      case \"fast_training\":\n        history.push(\"/fastworkout\");\n        break;\n      default:\n        break;\n    }\n  };\n\n  const history = useHistory();\n  const ChooseTrain = (train_name) => {\n    train_name =\n      train_name.charAt(0).toUpperCase() + train_name.slice(1).trim();\n    console.log(\"WK\", workouts.current);\n    if (workouts.current.data != undefined) {\n      workouts.current.data.map(({ _id, name, discription }, i) => {\n        console.log(\"name\", name);\n        console.log(\"train_name\", train_name);\n        if (train_name == name.trim()) {\n          //setWorkOutStartet(false)\n          console.log(\"i\", i);\n          console.log(\"name\", name);\n          setGroupId(i + 1);\n          setName(name);\n          setDescription(discription);\n          history.push(\"/fastworkout\");\n        }\n      });\n    }\n  };\n\n  const startTraining = async () => {\n    setIter(0);\n    setWorkOutStartet(true);\n  };\n  const changeExir = async (type) => {\n    switch (type) {\n      case \"next\":\n        setIterChanged(1);\n        break;\n      case \"previous\":\n        setIterChanged(0);\n        break;\n    }\n\n    setIterChanged(-1);\n  };\n\n  const dispatchAssistantAction = async (action) => {\n    console.log(\"dispatchAssistantAction\", action);\n    if (action) {\n      switch (action.type) {\n        case \"character\":\n          setCharacter(action.character.id);\n          // 'sber' | 'eva' | 'joy';\n          break;\n        case \"show_calendar\":\n          ChangePage(\"Calendar\");\n          break;\n        case \"to_fast_training\":\n          setGroupId(2)\n          ChangePage(\"fast_training\");\n          break;\n        case \"to_choose_training\":\n          ChangePage(\"choose_training\");\n          break;\n        case \"choose_train\":\n          ChooseTrain(action.data);\n          break;\n        case \"start_train\":\n          startTraining();\n          break;\n        case \"next_exircise\":\n          changeExir(\"next\");\n          break;\n        case \"previous_exircise\":\n          changeExir(\"previous\");\n          break;\n        case \"to_main\":\n          history.push(\"/\");\n          break;\n\n        default:\n          break;\n      }\n    }\n  };\n  const [achieves, setAchieves] = useState([]);\n\n  useEffect(() => {\n    assistant.current = initializeAssistant(() => getStateForAssistant());\n    assistant.current.on(\"start\", (event) => {\n      console.log(`assistant.on(start)`, event);\n    });\n\n    assistant.current.on(\n      \"data\",\n      (event /*: any*/) => {\n        if (event.type == \"smart_app_data\") {\n          console.log(\"userId\", event.user_id);\n          if (event.sub != undefined) {\n            setUserId(event.sub);\n            getData(event.sub);\n            ApiQueries.createUser(userId);\n          } else if (event.user_id != undefined) {\n            setUserId(event.user_id);\n            getData(event.user_id);\n            ApiQueries.createUser(userId);\n          }\n          const getUserAchieves = async () => {\n            var ach = await ApiQueries.getAchiviesFomUser(event.user_id);\n            setAchieves(ach.data);\n          };\n          getUserAchieves();\n        }\n        if (event.type == \"character\") {\n          setAssistantType(event.character.id);\n        }\n        console.log(`assistant.on(data)`, event);\n        const { action } = event;\n        dispatchAssistantAction(action);\n      },\n      []\n    );\n\n    if (assistant.current != null) {\n      console.log(\"Non null, send data\");\n    } else {\n      console.log(\"Null\");\n    }\n  }, []);\n\n  useEffect(() => {\n    const fetchCategoriesAndSetCategories = async () => {\n      const workout = await ApiQueries.getAllGroupsExercises();\n      workouts.current = workout;\n    };\n    fetchCategoriesAndSetCategories();\n  }, [workouts]);\n\n  const [groupId, setGroupId] = useState(2);\n  const [description, setDescription] = useState(\n    \"Облегченный вид утренней тренировки. Позволит размять тело без сильных нагрузок на организм.\"\n  );\n  const [name, setName] = useState(\"Быстрая тренировка\");\n\n  const SendDataToAssistant = async (action) => {\n    assistant.current.sendData({\n      action: { action_id: action, parameters: {} },\n    });\n  };\n  const TochooseCat = async (action) => {\n    assistant.current.sendData({\n      action: { action_id: \"chooseCategory\", parameters: {} },\n    });\n  };\n\n  return (\n    <AppStyled>\n      <DocStyles />\n      <TypoScale />\n      {(() => {\n        switch (character) {\n          case \"sber\":\n            return <ThemeBackgroundSber />;\n          case \"eva\":\n            return <ThemeBackgroundEva />;\n          case \"joy\":\n            return <ThemeBackgroundJoy />;\n          default:\n            return;\n        }\n      })()}\n      {assistant.current ? (\n        <Switch>\n          <Route path=\"/choose\">\n            <Choose\n              setGroupId={setGroupId}\n              setDescription={setDescription}\n              setName={setName}\n              workouts={workouts}\n              SendDataToAssistant={SendDataToAssistant}\n            />\n          </Route>\n          <Route path=\"/fastworkout\">\n            <Workout\n              groupId={groupId}\n              description={description}\n              workoutExercises={workoutExercises}\n              setWorkoutExercises={setWorkoutExercises}\n              name={name}\n              userId={userId}\n              workOutStarted={workOutStarted}\n              setWorkOutStartet={setWorkOutStartet}\n              iterChanged={iterChanged}\n              setAchieves={setAchieves}\n              assistant={assistant}\n              iter={iter}\n              setIter={setIter}\n              setGroupId={setGroupId}\n              assistantType={assistantType}\n            />\n          </Route>\n          <Route path=\"/calendar\" exact>\n            <SportCalendar userId={userId} digit={digit} />\n          </Route>\n          <Route path=\"/\">\n            <Main\n              setGroupId={setGroupId}\n              ToChooseCateg={TochooseCat}\n              achieves={achieves}\n              setName={setName}\n              setDescription={setDescription}\n            />\n          </Route>\n        </Switch>\n      ) : (\n        <Container>\n          <Spinner />\n        </Container>\n      )}\n    </AppStyled>\n  );\n}\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Router>\r\n      <App />\r\n    </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}
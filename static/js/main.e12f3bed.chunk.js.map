{"version":3,"sources":["ApiQueries.js","pages/SportCalendar.js","pages/Main.js","components/Timer.js","pages/Workout.js","pages/Choose.js","App.js","serviceWorker.js","index.js"],"names":["API_URL","UserId","a","axios","post","SberId","Name","Age","Gender","Active","newUser","data","get","params","users","user_id","category","groups","GroupId","group_id","exircises","date","Completed","Date","newProgress","progress","ach","getAllGroupsExercises","getExircicesfromGroup","getUsersBySberId","getProgressByUser","createProgressAchieve","createUser","getProverkaUsersByUserId","getAchiviesFomUser","withRouter","userId","digit","useEffect","ApiQueries","dates_new","console","log","forEach","element","push","parse","setSelectedDates","getData","useState","selectedDates","modifiers","selected","some","selectedDate","isSameDay","locale","ru","setGroupId","ToChooseCateg","achieves","style","display","justifyContent","marginBottom","width","compact","content","right","marginTop","to","textDecoration","onClick","left","flexDirection","text","color","primary","dict","size","view","count_days_train","count_train","format","time","minutes","Math","floor","seconds","padTime","customStyles","backgroundColor","background","backgroundImage","gradient","top","bottom","marginRight","transform","borderRadius","padding","Timer","subtitle","setIter","timeCount","iter","workoutLength","setAchieves","history","workoutExercises","sayExircise","useHistory","React","modalIsOpen","setIsOpen","counter","setCounter","counterRest","setCounterRest","timer","setTimeout","c","clearTimeout","getUserAchieves","isOpen","onAfterOpen","ref","_subtitle","textAlign","String","length","options","year","month","day","timezone","groupId","setWorkoutExercises","description","name","workOutStarted","setWorkOutStartet","iterChanged","assistant","fetchCategoriesAndSetCategories","workoutsEx","undefined","discription","title","current","sendData","action","action_id","parameters","toLocaleString","map","i","_id","accent","class","src","photo","lines","scaleOnInteraction","outlined","fullWidth","disabled","tabIndex","setDescription","setName","setWorkouts","workouts","SendDataToAssistant","Row","short_discription","Col","type","scaleOnFocus","placeholder","AppStyled","styled","div","body1","TypoScale","createGlobalStyle","sberBox","ThemeBackgroundEva","darkEva","ThemeBackgroundSber","darkSber","ThemeBackgroundJoy","darkJoy","DocStyles","character","setCharacter","useRef","state","notes","setUserId","setIterChanged","setDigit","Id","then","ChangePage","page","ChooseTrain","train_name","charAt","toUpperCase","slice","trim","startTraining","changeExir","dispatchAssistantAction","id","getState","state_","item_selector","items","index","number","getStateForAssistant","createAssistant","on","event","TochooseCat","path","exact","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.e12f3bed.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst API_URL = \"https://lit-escarpment-35334.herokuapp.com/\";\r\nasync function createSberId(SberId) {\r\n  const { data: newSberId } = await axios.post(`${API_URL}SberId/`, {\r\n    SberId,\r\n  });\r\n  return newSberId;\r\n}\r\n\r\nasync function createUser(UserId) {\r\n  const { data: newUser } = await axios.post(`${API_URL}User/`, {\r\n    UserId: UserId,\r\n    SberId: 0,\r\n    Name: \"\",\r\n    Age: 0,\r\n    Gender: \"\",\r\n    Active: 0,\r\n  });\r\n  return newUser;\r\n}\r\n\r\nasync function getUsersBySberId(SberId) {\r\n  const users = await axios.get(`${API_URL}User/`, {\r\n    params: {\r\n      SberId: SberId,\r\n    },\r\n  });\r\n  return users;\r\n}\r\n\r\nasync function createCategoryExercises(CategoryName) {\r\n  const { data: newCategory } = await axios.post(`${API_URL}ExCateg/`, {\r\n    CategoryName,\r\n  });\r\n  return newCategory;\r\n}\r\n\r\nasync function getAllCategoriesExirc() {\r\n  const categories = await axios.get(`${API_URL}ExCateg/`);\r\n  return categories;\r\n}\r\nasync function getCategoryById(CategoryId) {\r\n  const category = await axios.get(`${API_URL}ExCateg/`, {\r\n    params: {\r\n      Id: CategoryId,\r\n    },\r\n  });\r\n  return category;\r\n}\r\nasync function getProverkaUsersByUserId(UserId) {\r\n  const category = await axios.get(`${API_URL}ProverkaUsersByUserId/`, {\r\n    params: {\r\n      user_id: UserId,\r\n    },\r\n  });\r\n  return category;\r\n}\r\nasync function getAllGroupsExercises() {\r\n  const groups = await axios.get(`${API_URL}AllGroupsExercises/`);\r\n  return groups;\r\n}\r\nasync function getExircicesfromGroup(GroupId) {\r\n  const exircises = await axios.get(`${API_URL}ExircicesfromGroup/`, {\r\n    params: {\r\n      group_id: GroupId,\r\n    },\r\n  });\r\n  return exircises;\r\n}\r\n\r\nasync function createProgressAchieve(UserId, date, Completed) {\r\n  const { data: newProgress } = axios.post(`${API_URL}ProgressAchieve/`, {\r\n    UserId: UserId,\r\n    Date: date,\r\n    Completed: true,\r\n  });\r\n  return newProgress;\r\n}\r\n\r\nasync function getProgressByUser(UserId) {\r\n  const progress = axios.get(`${API_URL}ProgressByUser/`, {\r\n    params: {\r\n      user_id: UserId,\r\n    },\r\n  });\r\n  return progress;\r\n}\r\n\r\nasync function getMotivationalPhrase() {\r\n  const Phrase = axios.get(`${API_URL}Phrase/`);\r\n  return Phrase;\r\n}\r\n\r\nasync function updateQuestion(id, payload) {\r\n  const { data: newQuestion } = await axios.put(`${API_URL}${id}`, payload);\r\n  return newQuestion;\r\n}\r\nasync function getAchiviesFomUser(UserId) {\r\n  const ach = axios.get(`${API_URL}AchiviesFomUser/`, {\r\n    params: {\r\n      user_id: UserId,\r\n    },\r\n  });\r\n  return ach;\r\n}\r\nexport default {\r\n  API_URL,\r\n  getAllGroupsExercises,\r\n  getExircicesfromGroup,\r\n  getUsersBySberId,\r\n  getProgressByUser,\r\n  createProgressAchieve,\r\n  createUser,\r\n  getProverkaUsersByUserId,\r\n  getAchiviesFomUser,\r\n};\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { withRouter, Link } from \"react-router-dom\";\r\nimport { Calendar } from \"react-nice-dates\";\r\nimport \"react-nice-dates/build/style.css\";\r\nimport { ru } from \"date-fns/locale\";\r\nimport { isSameDay } from \"date-fns\";\r\nimport { Button, Container, Spinner } from \"@sberdevices/ui\";\r\nimport ApiQueries from \"../ApiQueries\";\r\n\r\nimport \"./SportCalendar.css\";\r\nconst SportCalendar = ({ userId, digit }) => {  \r\n  useEffect(() => {\r\n\r\n    const getData = async userId =>{\r\n      const data = await ApiQueries.getProgressByUser(userId);\r\n      var dates_new = []\r\n      console.log(\"Data\", data)\r\n      data.data.forEach((element) => {\r\n        dates_new.push(Date.parse(element.date))\r\n      });\r\n      setSelectedDates(dates_new)\r\n    }\r\n     getData(userId)\r\n  },[]);\r\n    const [selectedDates, setSelectedDates] = useState([])\r\n    const modifiers = {\r\n      selected: date => selectedDates.some(selectedDate => isSameDay(selectedDate, date))\r\n    }\r\n    return (\r\n      <Calendar modifiers={modifiers} locale={ru} />\r\n    )\r\n};\r\n\r\nexport default withRouter(SportCalendar);\r\n","import { Button, Container } from \"@sberdevices/ui\";\r\nimport React, { useState } from \"react\";\r\nimport { withRouter, Link } from \"react-router-dom\";\r\nimport {\r\n  IconCalendar,\r\n  IconAccessibility,\r\n  IconDone,\r\n  IconApps,\r\n  IconCross,\r\n  IconEvent,\r\n  IconHeart,\r\n} from \"@sberdevices/plasma-icons\";\r\nimport { Headline3 } from \"@sberdevices/ui/components/Typography\";\r\n\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  TextBox,\r\n  TextBoxBiggerTitle,\r\n  TextBoxSubTitle,\r\n  Cell,\r\n  CellDisclosure,\r\n  CellIcon,\r\n  TextBoxTitle,\r\n  MarkedList,\r\n  Badge,\r\n  MarkedItem,\r\n  IconSettings,\r\n} from \"@sberdevices/ui\";\r\nimport { tertiary, primary, accent } from \"@sberdevices/plasma-tokens\";\r\nconst Main = ({ setGroupId, ToChooseCateg, achieves }) => {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"space-around\",\r\n        marginBottom: \"2rem\",\r\n      }}\r\n    >\r\n      <Card style={{ width: \"20rem\" }}>\r\n        <CardContent compact>\r\n          <Cell\r\n            content={<TextBoxBiggerTitle>Главное меню</TextBoxBiggerTitle>}\r\n            right={<span style={{ marginTop: 5 }}></span>}\r\n          />\r\n          <Link\r\n            to=\"/fastworkout\"\r\n            style={{\r\n              textDecoration: \"none\",\r\n            }}\r\n          >\r\n            <Cell\r\n              onClick={() => {\r\n                setGroupId(2);\r\n              }}\r\n              left={\r\n                <CellIcon>\r\n                  <IconAccessibility />\r\n                </CellIcon>\r\n              }\r\n              content={\r\n                <TextBox>\r\n                  <TextBoxTitle>Быстрая тренировка</TextBoxTitle>\r\n                  <TextBoxSubTitle>10 мин</TextBoxSubTitle>\r\n                </TextBox>\r\n              }\r\n              right={<CellDisclosure />}\r\n            />\r\n          </Link>\r\n          <Link to=\"/choose\" style={{ textDecoration: \"none\" }}>\r\n            <Cell\r\n              left={\r\n                <CellIcon>\r\n                  <IconApps />\r\n                </CellIcon>\r\n              }\r\n              onClick={() => ToChooseCateg()}\r\n              content={\r\n                <TextBox>\r\n                  <TextBoxTitle>Меню тренировок</TextBoxTitle>\r\n                  <TextBoxSubTitle>На любой вкус</TextBoxSubTitle>\r\n                </TextBox>\r\n              }\r\n              right={<CellDisclosure />}\r\n            />\r\n          </Link>\r\n\r\n          <Link\r\n            to=\"/calendar\"\r\n            style={{\r\n              textDecoration: \"none\",\r\n            }}\r\n          >\r\n            <Cell\r\n              left={\r\n                <CellIcon>\r\n                  <IconCalendar />\r\n                </CellIcon>\r\n              }\r\n              content={\r\n                <TextBox>\r\n                  <TextBoxTitle>Календарь</TextBoxTitle>\r\n                  <TextBoxSubTitle>Ваш прогресс</TextBoxSubTitle>\r\n                </TextBox>\r\n              }\r\n              right={<CellDisclosure />}\r\n            />\r\n          </Link>\r\n        </CardContent>\r\n      </Card>\r\n      <div style={{ flexDirection: \"column\" }}>\r\n        <br /> <br />\r\n        <Headline3>Ваша статистика</Headline3>\r\n        <MarkedList>\r\n          {/* <div\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          > */}\r\n          <MarkedItem\r\n            text=\"дней с тренировками подряд\"\r\n            style={{ color: primary }}\r\n          >\r\n            {/* <IconEvent size=\"xs\" color={accent} /> */}\r\n            <Badge text={achieves.dict} size={\"l\"} view={\"secondary\"} />\r\n          </MarkedItem>\r\n          {/* </div> */}\r\n\r\n          <MarkedItem\r\n            text=\"всего дней с тренировками\"\r\n            style={{ color: primary }}\r\n          >\r\n            {/* <IconDone size=\"xs\" color={accent} /> */}\r\n            <Badge\r\n              text={achieves.count_days_train}\r\n              size={\"l\"}\r\n              view={\"secondary\"}\r\n            />\r\n          </MarkedItem>\r\n\r\n          <MarkedItem text=\"общее число тренировок\" style={{ color: primary }}>\r\n            {/* <IconHeart size=\"xs\" color={accent} /> */}\r\n            <Badge text={achieves.count_train} size={\"l\"} view={\"secondary\"} />\r\n          </MarkedItem>\r\n        </MarkedList>\r\n        <br />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(Main);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Modal from \"react-modal\";\r\nimport { text, background, gradient } from \"@sberdevices/plasma-tokens\";\r\nimport { Button } from \"@sberdevices/ui\";\r\nimport { IconHouse } from \"@sberdevices/plasma-icons\";\r\nimport \"./Modal.css\";\r\nimport ApiQueries from \"../ApiQueries\";\r\n\r\nimport { Headline2 } from \"@sberdevices/ui/components/Typography\";\r\nimport { BrowserRouter as Router, useHistory } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\nconst format = (time) => {\r\n  // Convert seconds into minutes and take the whole part\r\n  const minutes = Math.floor(time / 60);\r\n\r\n  // Get the seconds left after converting minutes\r\n  const seconds = time % 60;\r\n\r\n  //Return combined values as string in format mm:ss\r\n  return `${minutes}:${padTime(seconds)}`;\r\n};\r\nconst customStyles = {\r\n  content: {\r\n    color: `${text}`,\r\n    backgroundColor: `${background}`,\r\n    backgroundImage: `${gradient}`,\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    right: \"auto\",\r\n    bottom: \"auto\",\r\n    marginRight: \"-50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    borderRadius: \"1em\",\r\n    padding: \"1em\",\r\n  },\r\n};\r\n// const DocStyles = {`\r\n//     /* stylelint-disable-next-line selector-nested-pattern */\r\n//     html {\r\n\r\n//     }\r\n// `;\r\n// Make sure to bind modal to your appElement (http://reactcommunity.org/react-modal/accessibility/)\r\nexport const Timer = ({\r\n  setIter,\r\n  timeCount,\r\n  iter,\r\n  userId,\r\n  workoutLength,\r\n  setAchieves,\r\n  workoutExercises,\r\n  sayExircise\r\n}) => {\r\n  const history = useHistory();\r\n\r\n  var subtitle;\r\n  const [modalIsOpen, setIsOpen] = React.useState(false);\r\n  function openModal() {\r\n    setIsOpen(true);\r\n  }\r\n\r\n  function afterOpenModal() {\r\n    // references are now sync'd and can be accessed.\r\n    subtitle.style.color = \"\";\r\n    setCounterRest(30);\r\n  }\r\n\r\n  function closeModal() {\r\n    setIsOpen(false);\r\n  }\r\n  const [counter, setCounter] = React.useState(timeCount.timeCount);\r\n  const [counterRest, setCounterRest] = React.useState(30);\r\n  React.useEffect(() => {\r\n    console.log(\"Верхний юз\");\r\n\r\n    setCounter(timeCount.timeCount);\r\n  }, [timeCount]);\r\n  React.useEffect(() => {\r\n    console.log(timeCount);\r\n    // if(changed){\r\n\r\n    // }\r\n    // else{\r\n    //   setChanged()\r\n    // }\r\n    console.log(\"Timer useeffect\");\r\n\r\n    let timer;\r\n    if (counter > 0) {\r\n      timer = setTimeout(() => setCounter((c) => c - 1), 1000);\r\n    } else if (counter === 0) {\r\n      setIsOpen(true);\r\n\r\n    }\r\n    return () => {\r\n      if (timer) {\r\n        clearTimeout(timer);\r\n      }\r\n    };\r\n  }, [counter]);\r\n  React.useEffect(() => {\r\n    let timer;\r\n    if (counterRest > 0) {\r\n      timer = setTimeout(() => setCounterRest((c) => c - 1), 1000);\r\n    } else if (counter === 0) {\r\n      setIsOpen(false);\r\n      if (iter + 1 == workoutLength) {\r\n        const getUserAchieves = async () => {\r\n          await ApiQueries.createProgressAchieve(userId, new Date(), true);\r\n          var ach = await ApiQueries.getAchiviesFomUser(userId);\r\n          setAchieves(ach.data);\r\n        };\r\n        getUserAchieves();\r\n      }\r\n      setIter(iter + 1);\r\n      setCounter(timeCount);\r\n    }\r\n    return () => {\r\n      if (timer) {\r\n        clearTimeout(timer);\r\n      }\r\n    };\r\n  }, [counterRest]);\r\n  return (\r\n    <div>\r\n      {counter !== 0 && <Headline2>Время: {format(counter)}</Headline2>}\r\n      <div>\r\n        <Modal\r\n          isOpen={modalIsOpen}\r\n          onAfterOpen={afterOpenModal}\r\n          //onRequestClose={closeModal}\r\n          style={customStyles}\r\n        >\r\n          <h2\r\n            ref={(_subtitle) => (subtitle = _subtitle)}\r\n            style={{ textAlign: \"center\" }}\r\n          >\r\n            Отдых\r\n          </h2>\r\n          <div style={{ textAlign: \"center\" }}>\r\n            <Headline2>Следующее упражнение через</Headline2>\r\n            <br />\r\n            {counterRest !== 0 && <Headline2>{format(counterRest)}</Headline2>}\r\n          </div>\r\n\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"row\",\r\n              justifyContent: \"space-between\",\r\n            }}\r\n          >\r\n            <Button\r\n              onClick={() => {\r\n                setIsOpen(false);\r\n                setCounterRest(30);\r\n                history.push(\"/\");\r\n              }}\r\n            >\r\n              <IconHouse />\r\n            </Button>\r\n\r\n            <Button\r\n              onClick={() => {\r\n                setIsOpen(false);\r\n                setIter(iter + 1);\r\n                setCounter(timeCount);\r\n              }}\r\n            >\r\n              Продолжить\r\n            </Button>\r\n          </div>\r\n        </Modal>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst padTime = (time) => {\r\n  return String(time).length === 1 ? `0${time}` : `${time}`;\r\n};\r\n","import { Button, Container, TextField } from \"@sberdevices/ui\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { withRouter, Link } from \"react-router-dom\";\r\nimport ApiQueries from \"../ApiQueries\";\r\n\r\nimport { tertiary, primary, accent } from \"@sberdevices/plasma-tokens\";\r\nimport {\r\n  body1,\r\n  Display3,\r\n  Headline3,\r\n  Body1,\r\n  Body3,\r\n  Body2,\r\n} from \"@sberdevices/ui/components/Typography\";\r\nimport { Headline2 } from \"@sberdevices/ui/components/Typography\";\r\n\r\nimport { CountdownCircleTimer } from \"react-countdown-circle-timer\";\r\nimport { createBrowserHistory } from \"history\";\r\nimport { BrowserRouter as Router, useHistory } from \"react-router-dom\";\r\nimport { IconDone, IconLock } from \"@sberdevices/plasma-icons\";\r\nimport { IconHouse } from \"@sberdevices/plasma-icons\";\r\n\r\nimport {\r\n  MarkedList,\r\n  MarkedItem,\r\n  Card,\r\n  CardBody,\r\n  CardMedia,\r\n  CardContent,\r\n  TextBoxBigTitle,\r\n  TextBoxBiggerTitle,\r\n  TextBox,\r\n  TextBoxSubTitle,\r\n  CardParagraph1,\r\n  CardHeadline1,\r\n  Spinner,\r\n} from \"@sberdevices/ui\";\r\nimport \"./Workout.css\";\r\nimport { Timer } from \"../components/Timer\";\r\nconst renderTime = ({ remainingTime }) => {\r\n  if (remainingTime === 0) {\r\n    return <div className=\"timer\">Стоп</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"timer\">\r\n      {/* <div className=\"text\">Remaining</div> */}\r\n      <div className=\"value\">{remainingTime}</div>\r\n      {/* <div className=\"text\">seconds</div> */}\r\n    </div>\r\n  );\r\n};\r\nvar date = new Date();\r\nvar options = {\r\n  year: \"numeric\",\r\n  month: \"numeric\",\r\n  day: \"numeric\",\r\n  timezone: \"UTC\",\r\n};\r\n\r\nconst Workout = ({\r\n  groupId,\r\n  workoutExercises,\r\n  setWorkoutExercises,\r\n  description,\r\n  name,\r\n  userId,\r\n  workOutStarted,\r\n  setWorkOutStartet,\r\n  setAchieves,\r\n  iterChanged,\r\n  assistant,\r\n  iter,\r\n  setIter\r\n}) => {\r\n  const history = useHistory();\r\n\r\n\r\n  const fetchCategoriesAndSetCategories = async () => {\r\n    const workoutsEx = await ApiQueries.getExircicesfromGroup(groupId);\r\n    setWorkoutExercises(workoutsEx.data);\r\n  };\r\n  useEffect(() => {\r\n    fetchCategoriesAndSetCategories();\r\n    console.log(\"Workout useeffect\");\r\n  }, []);\r\n  // useEffect(() => {\r\n  //   if (iterChanged == 1) {\r\n  //     setIter(iter + 1);\r\n  //   } else if (iterChanged == 0) {\r\n  //     setIter(iter - 1);\r\n  //   }\r\n    \r\n  // }, [iterChanged]);\r\n\r\n  useEffect(() =>{\r\n   if(workoutExercises[iter]!=undefined){\r\n    sayExircise(workoutExercises[iter].discription)\r\n   }\r\n  },[iter])\r\n  useEffect(() => { \r\n    if (iterChanged == 1) { \r\n      setIter(iter + 1); \r\n    } else if (iterChanged == 0) { \r\n      setIter(iter - 1); \r\n    } \r\n  }, [iterChanged]);\r\n  // useEffect(() =>{\r\n  //  if(workoutExercises[0]!=undefined){\r\n  //   assistant.current?.sendData({ action: { action_id: 'ChangeExir', parameters: { \"description\":workoutExercises[0].discription, \"number\":iter } } });\r\n  //  }\r\n  // },[workOutStarted])\r\n\r\n  const sayExircise = (title) => {\r\n    assistant.current?.sendData({ action: { action_id: 'say', parameters: { \"description\":title, \"number\":iter } } });\r\n  };\r\n  const [timeCount, tsetTimeCount] = useState();\r\n  return !workOutStarted ? (\r\n    <>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-around\",\r\n        }}\r\n      >\r\n        <div style={{ flexDirection: \"column\" }}>\r\n          <Headline2>{name}</Headline2>\r\n\r\n          {workoutExercises ? (\r\n            <MarkedList>\r\n              {workoutExercises.map(({ _id, name }, i) => (\r\n                <MarkedItem text={name} style={{ color: primary }}>\r\n                  <IconDone size=\"xs\" color={accent} />\r\n                </MarkedItem>\r\n              ))}\r\n            </MarkedList>\r\n          ) : (\r\n            <Spinner />\r\n          )}\r\n\r\n          <br />\r\n        </div>\r\n        <div style={{ flexDirection: \"column\" }}>\r\n          <Card style={{ width: \"20rem\" }}>\r\n            <CardBody>\r\n              <CardContent>\r\n                <TextBox>\r\n                  <TextBoxBigTitle>Описание</TextBoxBigTitle>\r\n                  {/* <TextBoxSubTitle>10 минут</TextBoxSubTitle> */}\r\n                  <CardParagraph1 style={{ marginTop: \"0.75rem\" }} lines={4}>\r\n                    {description}\r\n                  </CardParagraph1>\r\n                  <TextBoxSubTitle>Подходит для всех</TextBoxSubTitle>\r\n                </TextBox>\r\n                <br />\r\n                <Button\r\n                 \r\n                  onClick={() => {\r\n                    if(workoutExercises[0].discription!=undefined){\r\n                      sayExircise(workoutExercises[0].discription)\r\n                    }\r\n                    setWorkOutStartet(true);\r\n                  }}\r\n                >\r\n                  Начать\r\n                </Button>\r\n              </CardContent>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </>\r\n  ) : (\r\n    <div>\r\n      {/* <Button\r\n        onClick={() => {\r\n          setWorkOutStartet(false);\r\n        }}\r\n      >\r\n        Закончить\r\n      </Button>\r\n      <Button\r\n        onClick={() => {\r\n          history.push(\"/\");\r\n        }}\r\n      >\r\n        На главную\r\n      </Button> */}\r\n\r\n      <Card style={{ marginBottom: \"3rem\" }}>\r\n        <CardBody>\r\n          <CardContent>\r\n            {workoutExercises ? (\r\n              <div>\r\n                {iter == workoutExercises.length ? (\r\n                  <div\r\n                    style={{\r\n                      display: \"flex\",\r\n                      flexDirection: \"column\",\r\n                      justifyContent: \"space-around\",\r\n                    }}\r\n                  >\r\n                    <TextBoxBigTitle>Тренировка завершена</TextBoxBigTitle>\r\n\r\n                    <div\r\n                      style={{\r\n                        display: \"flex\",\r\n                        justifyContent: \"space-around\",\r\n                      }}\r\n                    >\r\n                      <div style={{ flexDirection: \"column\" }}>\r\n                        <CardParagraph1>\r\n                          {date.toLocaleString(\"ru\", options)}{\" \"}\r\n                        </CardParagraph1>\r\n                        {/* <TextBoxSubTitle>Время выполнения</TextBoxSubTitle> */}\r\n                      </div>\r\n\r\n                      {workoutExercises ? (\r\n                        <MarkedList>\r\n                          {workoutExercises.map(({ _id, name }, i) => (\r\n                            <MarkedItem text={name} style={{ color: primary }}>\r\n                              <IconDone size=\"xs\" color={accent} />\r\n                            </MarkedItem>\r\n                          ))}\r\n                        </MarkedList>\r\n                      ) : (\r\n                        <Spinner />\r\n                      )}\r\n                    </div>\r\n                    <br />\r\n                    <Button\r\n                      onClick={() => {\r\n                        setWorkOutStartet(false);\r\n                        history.push(\"/\");\r\n                      }}\r\n                    >\r\n                      <IconHouse />\r\n                    </Button>\r\n                  </div>\r\n                ) : (\r\n                  <div>\r\n                    <div\r\n                      style={{\r\n                        display: \"flex\",\r\n                        flexDirection: \"row\",\r\n                        justifyContent: \"space-between\",\r\n                      }}\r\n                    >\r\n                      <TextBoxBigTitle>\r\n                        {workoutExercises[iter].name}\r\n                      </TextBoxBigTitle>\r\n                      <div style={{ marginTop: \"0.5rem\" }}>\r\n                        <Timer\r\n                          setIter={setIter}\r\n                          timeCount={{ timeCount: workoutExercises[iter].time }}\r\n                          iter={iter}\r\n                          userId={userId}\r\n                          workoutLength={workoutExercises.length}\r\n                          setAchieves={setAchieves}\r\n                          workoutExercises={workoutExercises}\r\n                          sayExircise={sayExircise}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div\r\n                      style={{\r\n                        display: \"flex\",\r\n                        justifyContent: \"space-around\",\r\n                        flexDirection: \"row\",\r\n                      }}\r\n                    >\r\n                      <div class=\"wrapper exmp2\">\r\n                        <img src={workoutExercises[iter].photo} />\r\n                      </div>\r\n                      {/* <img\r\n                          style={{\r\n                            width: \"auto\",\r\n                            heigh: \"auto\",\r\n                            maxWidth: \"500px\",\r\n                            borderRadius: \"25px\",\r\n                          }}\r\n                          src=\"https://chslovo.com/wp-content/uploads/2019/03/21-1.jpg\"\r\n                        /> */}\r\n\r\n                      <div style={{ flexDirection: \"column\" }}>\r\n                        <CardParagraph1 lines={5}>\r\n                          {workoutExercises[iter].discription}\r\n                        </CardParagraph1>\r\n                        <div\r\n                          style={{\r\n                            display: \"flex\",\r\n                            justifyContent: \"space-between\",\r\n                          }}\r\n                        >\r\n                          <Button\r\n                            view=\"primary\"\r\n                            size=\"s\"\r\n                            scaleOnInteraction={false}\r\n                            outlined={false}\r\n                            fullWidth\r\n                            disabled={iter == 0}\r\n                            style={{ marginTop: \"1em\", marginRight: \"1em\" }}\r\n                            tabIndex={-1}\r\n                            onClick={() => {\r\n                              if(workoutExercises[iter-1]!=undefined){\r\n                                //assistant.current?.sendData({ action: { action_id: 'say', parameters: { \"description\":workoutExercises[iter-1].discription, \"number\":iter } } });\r\n                              }\r\n                              console.log(workoutExercises);\r\n                              setIter(iter - 1);\r\n                            }}\r\n                          >\r\n                            Предыдущее\r\n                          </Button>\r\n                          <Button\r\n                            view=\"primary\"\r\n                            size=\"s\"\r\n                            scaleOnInteraction={false}\r\n                            outlined={false}\r\n                            fullWidth\r\n                            style={{ marginTop: \"1em\" }}\r\n                            tabIndex={-1}\r\n                            onClick={() => {\r\n                              // if(workoutExercises[iter+1]!=undefined){\r\n                              //   sayExircise(workoutExercises[iter+1].discription)\r\n                              // }\r\n                              //if(workoutExercises[iter+1]!=undefined){\r\n                                //assistant.current?.sendData({ action: { action_id: 'say', parameters: { \"description\":workoutExercises[iter+1].discription, \"number\":iter } } });\r\n                             // }\r\n                              if (iter + 1 == workoutExercises.length) {\r\n                                const getUserAchieves = async () => {\r\n                                  await ApiQueries.createProgressAchieve(\r\n                                    userId,\r\n                                    new Date(),\r\n                                    true\r\n                                  );\r\n                                  var ach = await ApiQueries.getAchiviesFomUser(\r\n                                    userId\r\n                                  );\r\n                                  setAchieves(ach.data);\r\n                                };\r\n                                getUserAchieves();\r\n                              }\r\n\r\n                              setIter(iter + 1);\r\n                            }}\r\n                          >\r\n                            Следующее\r\n                          </Button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            ) : (\r\n              <div>\r\n                <Spinner />\r\n              </div>\r\n            )}\r\n          </CardContent>\r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(Workout);\r\n","import { Button, Container } from \"@sberdevices/ui\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { withRouter, Link } from \"react-router-dom\";\r\nimport { Row } from \"@sberdevices/ui/components/Grid/Row\";\r\nimport { Col } from \"@sberdevices/ui/components/Grid/Col\";\r\nimport ApiQueries from \"../ApiQueries\";\r\nimport {\r\n  Spinner,\r\n  Card,\r\n  CardBody,\r\n  CardMedia,\r\n  CardContent,\r\n  TextBoxBigTitle,\r\n  TextBoxBiggerTitle,\r\n  TextBoxSubTitle,\r\n  TextBox,\r\n} from \"@sberdevices/ui\";\r\nimport { Headline2 } from \"@sberdevices/ui/components/Typography\";\r\nimport \"./Workout.css\";\r\n\r\nconst Choose = ({\r\n  setGroupId,\r\n  setDescription,\r\n  setName,\r\n  setWorkouts,\r\n  workouts,\r\n  SendDataToAssistant\r\n}) => {\r\n  const fetchCategoriesAndSetCategories = async () => {\r\n    const workouts = await ApiQueries.getAllGroupsExercises();\r\n    setWorkouts(workouts);\r\n  };\r\n  useEffect(() => {\r\n    fetchCategoriesAndSetCategories();\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <div style={{ display: \"flex\", justifyContent: \"space-around\" }}>\r\n        <Headline2>Выберите режим тренировки</Headline2>\r\n      </div>\r\n      <br />\r\n      <Row>\r\n        {workouts.data ? (\r\n          workouts.data.map(({ name, short_discription, discription }, i) => (\r\n            <>\r\n              <Col type=\"calc\" size={1}>\r\n                <Card\r\n                  style={{ width: \"11rem\", marginBottom: \"1rem\" }}\r\n                  tabIndex={-1}\r\n                  scaleOnFocus={true}\r\n                >\r\n                  <CardBody>\r\n                    <CardMedia\r\n                      src=\"./images/320_320_0.jpg\"\r\n                      placeholder=\"./images/320_320_1.jpg\"\r\n                    />\r\n                    <CardContent>\r\n                      <TextBox>\r\n                        <TextBoxBigTitle>{name}</TextBoxBigTitle>\r\n                        <TextBoxSubTitle>{short_discription}</TextBoxSubTitle>\r\n                      </TextBox>\r\n\r\n                      <Link\r\n                        style={{\r\n                          color: \"#FFF\",\r\n                          textDecoration: \"none\",\r\n                        }}\r\n                        to=\"/fastworkout\"\r\n                      >\r\n                        <Button\r\n                          view=\"primary\"\r\n                          size=\"s\"\r\n                          scaleOnInteraction={false}\r\n                          outlined={false}\r\n                          fullWidth\r\n                          style={{ marginTop: \"1em\" }}\r\n                          tabIndex={-1}\r\n                          onClick={() => {\r\n                            console.log(workouts.data);\r\n                            //SendDataToAssistant('chooseCategory')\r\n                            setGroupId(i + 1);\r\n                            setDescription(discription);\r\n                            setName(name);\r\n                          }}\r\n                        >\r\n                          Выбрать\r\n                        </Button>\r\n                      </Link>\r\n                    </CardContent>\r\n                  </CardBody>\r\n                </Card>\r\n              </Col>\r\n            </>\r\n          ))\r\n        ) : (\r\n          <Spinner />\r\n        )}\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default withRouter(Choose);\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport \"./App.css\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { AssistantCharacterType } from \"@sberdevices/assistant-client\";\r\nimport { darkJoy, darkEva, darkSber } from \"@sberdevices/plasma-tokens/themes\";\r\nimport { text, background, gradient } from \"@sberdevices/plasma-tokens\";\r\nimport { Container } from \"@sberdevices/ui\";\r\n\r\nimport { createGlobalStyle } from \"styled-components\";\r\nimport styled from \"styled-components\";\r\nimport { sberBox } from \"@sberdevices/plasma-tokens/typo\";\r\nimport SportCalendar from \"./pages/SportCalendar\";\r\nimport { body1 } from \"@sberdevices/ui/components/Typography\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Main from \"./pages/Main\";\r\nimport Workout from \"./pages/Workout\";\r\nimport ApiQueries from \"./ApiQueries\";\r\nimport Choose from \"./pages/Choose\";\r\nimport { useHistory, withRouter } from \"react-router-dom\";\r\nimport {\r\n  createSmartappDebugger,\r\n  createAssistant,\r\n  AssistantAppState,\r\n} from \"@sberdevices/assistant-client\";\r\nimport { set } from \"date-fns\";\r\nimport { Spinner } from \"@sberdevices/ui\";\r\n\r\nconst AppStyled = styled.div`\r\n  padding: 30px;\r\n  ${body1}\r\n`;\r\nconst TypoScale = createGlobalStyle(sberBox);\r\n// const DocStyles = createGlobalStyle`\r\n//     /* stylelint-disable-next-line selector-nested-pattern */\r\n//     html {\r\n//         color: ${text};\r\n//         background-color: ${background};\r\n//         background-image: ${gradient};\r\n//         /** необходимо залить градиентом всю подложку */\r\n//         min-height: 100vh;\r\n//     }\r\n// `;\r\n// const Theme = createGlobalStyle(darkJoy);\r\n//const assistant=null;\r\nconst ThemeBackgroundEva = createGlobalStyle(darkEva);\r\nconst ThemeBackgroundSber = createGlobalStyle(darkSber);\r\nconst ThemeBackgroundJoy = createGlobalStyle(darkJoy);\r\n\r\nconst DocStyles = createGlobalStyle`\r\n  html {\r\n    color: ${text};\r\n    background-color: ${background};\r\n    background-image: ${gradient};\r\n    min-height: 100vh;\r\n  }\r\n`;\r\n\r\nconst initializeAssistant = (getState /*: any*/) => {\r\n  if (process.env.NODE_ENV === \"development\") {\r\n    return createSmartappDebugger({\r\n      token:\r\n        \"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE2MTUwMDk0MDcsImV4cCI6MTYxNTA5NTgwNywidHlwZSI6IkJlYXJlciIsImp0aSI6IjdlYjQ4N2M5LWFmNjctNDlmNS04ZjYzLTY5MDc5ODQyZjY0NCIsInN1YiI6IjdkMTM4N2FhY2RiYjY0ZTMwNTE3ODQ3ZGVhNzgwMDNmMTA4NjE1YmNlZGIzNTlmYjhmNWJiMWVkOGI0OTU3ZmM1MzliZTkyNzAwNDI2Mjk4IiwiYXVkIjoiVlBTIn0.h8aFrJA2AKT-l8bI_lTtctd-xeZJ2TYHcB0tSfYAopJ369N03ezTXjFtmCbtDwD3pCvxHALJ20myibUjcl_KBVVQRq4gSi6GLqmZk_--GZKXC4jdhwpoLOYByCE3V98yu_sxRpG8i0ylAYOZD70me0gHl_ngvaiEzosrp5WjX1Uzgkij8LSdGTEpkmWVM8UZ7oclmOIONBcemqVv9n6c_Tt-H2QEM3E9FuQW6ezwXH7gBRsJH1IxuhroQ5zYbplLzBrjyUmY_q0kfHIUe1imTxowxtbg1QdRchb3N_5oav2P4sCyr8FOMjC8xCRn0iLtDejwDR8b9ozhKyqaXRA_0wrg41RzAUfZXC4bBLppUdN0knHwIQl513FhTvNbxYcrTrLRfwUxFdAPN1GRaeljrIBbT-v6kwieoYqcAJKba9b5tsi-ZTV-oN8JCiXLV1BJWa0Fxx6u94wsAC_JbDy6K663MS5qOelrwDJ3N1jsLAjTwi7xmlbMNyA5XBsIxo4HZoXoqPdjG37QqhTDYB03zrLM0MTAzdgJY0BYzNeU9m17_SW1byfqHs81LfoeyNg5k_5yMYyWsye_yR1uJ5Xg_lCBnHZBeVwzArXzYpsey6FcEsEuEMVPwPxbUreL8ierjbo-CuLbE8q94ReiyV5fYQoGkTAme6xx-24X67UExz0\" ??\r\n        \"\",\r\n      initPhrase: `Запусти Бодрое утро`,\r\n      getState,\r\n    });\r\n  }\r\n  return createAssistant({ getState });\r\n};\r\n\r\nfunction App() {\r\n  const [character, setCharacter] = useState(\"sber\");\r\n\r\n  \r\n  var assistant = useRef();\r\n  var state = {\r\n    notes: [],\r\n  };\r\n  const [workouts, setWorkouts] = useState([]);\r\n\r\n  const [workoutExercises, setWorkoutExercises] = useState([]);\r\n  const [iter, setIter] = useState(0);\r\n  const [userId, setUserId] = useState([]);\r\n  const [workOutStarted, setWorkOutStartet] = useState(false);\r\n  const [iterChanged, setIterChanged] = useState(-1);\r\n  const [digit, setDigit] = useState(-1);\r\n  const getStateForAssistant = () => {\r\n    console.log(\"getStateForAssistant: this.state:\", state);\r\n    const state_ = {\r\n      item_selector: {\r\n        items: state.notes.map(({ id, title }, index) => ({\r\n          number: index + 1,\r\n          id,\r\n          title,\r\n        })),\r\n      },\r\n    };\r\n    console.log(\"getStateForAssistant: state:\", state);\r\n    return state_;\r\n  };\r\n\r\n  const getData = async (Id) => {\r\n    await ApiQueries.getProverkaUsersByUserId(Id).then((data) =>\r\n      setDigit(data.data)\r\n    );\r\n  };\r\n\r\n  const ChangePage = async (page) => {\r\n    switch (page) {\r\n      case \"Calendar\":\r\n        history.push(\"/calendar\");\r\n        break;\r\n      case \"fastworkout\":\r\n        history.push(\"/calendar\");\r\n        break;\r\n      case \"choose_training\":\r\n        history.push(\"/choose\");\r\n        break;\r\n      case \"fast_training\":\r\n        history.push(\"/fastworkout\");\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const history = useHistory();\r\n  const ChooseTrain = async (train_name) => {\r\n    train_name =\r\n      train_name.charAt(0).toUpperCase() + train_name.slice(1).trim();\r\n    console.log(\"WK\", workouts.data);\r\n    if (workouts.data != undefined) {\r\n      workouts.data.map(({ _id, name, discription }, i) => {\r\n        console.log(\"name\", name);\r\n        console.log(\"train_name\", train_name);\r\n        if (train_name == name.trim()) {\r\n          //setWorkOutStartet(false)\r\n          console.log(\"i\", i);\r\n          console.log(\"name\", name);\r\n          setGroupId(i + 1);\r\n          setName(name);\r\n          setDescription(discription);\r\n          history.push(\"/fastworkout\");\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const startTraining = async () => {\r\n    setWorkOutStartet(true);\r\n   // assistant.current?.sendData({ action: { action_id: 'say', parameters: { \"description\":title, \"number\":iter } } });\r\n    //history.push(\"/fastworkout\");\r\n  };\r\n  const changeExir = async (type) => { \r\n    switch (type) { \r\n      case \"next\": \r\n        setIterChanged(1); \r\n        break; \r\n      case \"previous\": \r\n        setIterChanged(0); \r\n        break; \r\n    } \r\n \r\n    setIterChanged(-1); \r\n  };\r\n\r\n  const dispatchAssistantAction = async (action) => {\r\n    console.log(\"dispatchAssistantAction\", action);\r\n    if (action) {\r\n      switch (action.type) {\r\n        case \"character\":\r\n          setCharacter(action.character.id);\r\n          // 'sber' | 'eva' | 'joy';\r\n          break;\r\n        case \"show_calendar\":\r\n          ChangePage(\"Calendar\");\r\n          break;\r\n        case \"to_fast_training\":\r\n          setGroupId(0);\r\n          ChangePage(\"fast_training\");\r\n          break;\r\n        case \"to_choose_training\":\r\n          ChangePage(\"choose_training\");\r\n          break;\r\n        case \"choose_train\":\r\n          ChooseTrain(action.data);\r\n          break;\r\n        case \"start_train\":\r\n          startTraining();\r\n          break;\r\n\r\n        case \"next_exircise\":\r\n          changeExir(\"next\");\r\n          break;\r\n        case \"previous_exircise\":\r\n          changeExir(\"previous\");\r\n          break;\r\n        case \"to_main\":\r\n          history.push(\"/\");\r\n          break;\r\n\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n  };\r\n  const [achieves, setAchieves] = useState([]);\r\n  useEffect(() => {\r\n    if (assistant.current == undefined) {\r\n      assistant.current = initializeAssistant(() => getStateForAssistant());\r\n      assistant.current.on(\"start\", (event) => {\r\n        console.log(`assistant.on(start)`, event);\r\n      });\r\n    }\r\n\r\n    assistant.current.on(\r\n      \"data\",\r\n      (event /*: any*/) => {\r\n        if (event.type == \"smart_app_data\") {\r\n          console.log(\"userId\", event.user_id);\r\n          if (event.user_id != undefined) {\r\n            setUserId(event.user_id);\r\n            getData(event.user_id);\r\n            ApiQueries.createUser(userId);\r\n          }\r\n          const getUserAchieves = async () => {\r\n            var ach = await ApiQueries.getAchiviesFomUser(event.user_id);\r\n            setAchieves(ach.data);\r\n          };\r\n          getUserAchieves();\r\n        }\r\n        console.log(`assistant.on(data)`, event);\r\n        const { action } = event;\r\n        dispatchAssistantAction(action);\r\n      },\r\n      []\r\n    );\r\n\r\n    //assistant.sendData({ action: { action_id: 'done', parameters: { title: 'купить хлеб' } } });\r\n\r\n    if (assistant.current != null) {\r\n      console.log(\"Non null, send data\");\r\n      //assistant.sendData({ action: { action_id: 'check_answer'}});\r\n    } else {\r\n      console.log(\"Null\");\r\n    }\r\n  }, [workouts]);\r\n  const [groupId, setGroupId] = useState(2);\r\n  const [description, setDescription] = useState(\r\n    \"Облегченный вид утренней тренирровки позволит вам размять тело без особых силовых усилий\"\r\n  );\r\n  const [name, setName] = useState(\"Быстрая тренировка\");\r\n\r\n  const SendDataToAssistant = async (action) => {\r\n    assistant.current.sendData({\r\n      action: { action_id: action, parameters: { } },\r\n    });\r\n  };\r\n  const TochooseCat = async (action) => {\r\n    assistant.current.sendData({\r\n      action: { action_id: \"chooseCategory\", parameters: { } },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <AppStyled>\r\n      <DocStyles />\r\n      <TypoScale />\r\n      {(() => {\r\n        switch (character) {\r\n          case \"sber\":\r\n            return <ThemeBackgroundSber />;\r\n          case \"eva\":\r\n            return <ThemeBackgroundEva />;\r\n          case \"joy\":\r\n            return <ThemeBackgroundJoy />;\r\n          default:\r\n            return;\r\n        }\r\n      })()}\r\n      {/* {assistant.current ? ( */}\r\n      <Switch>\r\n        <Route path=\"/choose\">\r\n          <Choose\r\n            setGroupId={setGroupId}\r\n            setDescription={setDescription}\r\n            setName={setName}\r\n            workouts={workouts}\r\n            setWorkouts={setWorkouts}\r\n            SendDataToAssistant={SendDataToAssistant}\r\n          />\r\n        </Route>\r\n        <Route path=\"/fastworkout\">\r\n          <Workout\r\n            groupId={groupId}\r\n            description={description}\r\n            workoutExercises={workoutExercises}\r\n            setWorkoutExercises={setWorkoutExercises}\r\n            name={name}\r\n            userId={userId}\r\n            workOutStarted={workOutStarted}\r\n            setWorkOutStartet={setWorkOutStartet}\r\n            iterChanged={iterChanged}\r\n            setAchieves={setAchieves}\r\n            assistant={assistant}\r\n            iter={iter}\r\n            setIter={setIter}\r\n\r\n          />\r\n        </Route>\r\n        <Route path=\"/calendar\" exact>\r\n          <SportCalendar userId={userId} digit={digit} />\r\n        </Route>\r\n        <Route path=\"/\">\r\n          <Main\r\n            setGroupId={setGroupId}\r\n            ToChooseCateg={TochooseCat}\r\n            achieves={achieves}\r\n          />\r\n        </Route>\r\n      </Switch>\r\n      {/* ) : (\r\n        <Container>\r\n          <Spinner />\r\n        </Container>\r\n      )} */}\r\n    </AppStyled>\r\n  );\r\n}\r\nexport default withRouter(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Router>\r\n      <App />\r\n    </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}